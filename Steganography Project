// CSE 566 Project 1 - Steganography //
#pragma warning disable

byte[] bmpBytes=new byte[]{  // provided bitmap bytes// 
        0x42,0x4D,0x4C,0x00,0x00,0x00,0x00,0x00,
        0x00,0x00,0x1A,0x00,0x00,0x00,0x0C,0x00,
        0x00,0x00,0x04,0x00,0x04,0x00,0x01,0x00,
        0x18,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
        0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
        0xFF,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,
        0x00,0x00,0xFF,0x00,0x00,0xFF,0xFF,0xFF,
        0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
        0xFF,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,
        0x00,0x00
};

byte[] new_byte = new byte[26];
Buffer.BlockCopy(bmpBytes,0,new_byte,0,26); // Header Bytes added to new byte //
int i;
int place = 26;  // Where the XOR'd bytes will start to replace bitmap bytes//
string phr = args[0]; // 12 hexadecimal digits inputted as arguments //
int startc; // counter for foreach loop // 
string[] words = phr.Split(' '); 

List<byte> list = new List<byte>();
list.AddRange(new_byte);  // adding header bytes to a list //

foreach (var word in words)
{       
        startc = 0;
        byte newb = Convert.ToByte(word,16); // hex digit converted to integer value //
        var bitstring = Convert.ToString(newb,2); //integer value converted to binary value //
        
        if (bitstring.Length < 8)
        {
                bitstring = bitstring.PadLeft((8),'0');
        }

        for (i = 1;i<bitstring.Length;i++)
        {       
                if (i % 2 != 0)
                {
                  char x = bitstring[i];  //saving first letter of bit string from hex digits inputted into char//
                  char y = bitstring[i-1];  // same as above but second bit//
                  string x1 = Char.ToString(x); 
                  string y1 = Char.ToString(y);
                  string yx = y1 + x1; //2 bits of hex digits combined, 4 different sets total//
                  int inputbyte = Convert.ToByte(yx,2); // convert the two combined chars to bytes//
                  var selected = bmpBytes.Skip(place).Take(4).ToArray(); //selecting 4 bytes from bitmap starting from place//
                  var selectedbyte = selected.GetValue(startc);
                  int bitmapvalue = Convert.ToInt32(selectedbyte);
                  byte result = (byte)( bitmapvalue ^ inputbyte ); // bitmap value - provided bitmap, inputbyte - hex digits//
                  byte[] result1 = new byte[] {result};
                  list.AddRange(result1);  // add changed byte to byte list//
                  startc=startc + 1; // iterate through provided hex digits//
                }
       
        }
        place = place + 4; // iterate through bitmap bytes// 
}
Console.WriteLine(BitConverter.ToString(list.ToArray()).Replace("-"," "));

